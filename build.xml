<project name="MyProject" default="dist" basedir=".">
 <description>
 File: build.xml
 Author: Procesadores de Lenguajes-University of Zaragoza
 Date: julio 2021
 Coms: compilar mediante "ant"
 
 Ejemplo de fichero ant-build para procesadores de lenguajes.
 Debe tener la siguiente estructura:
 bateria_tests bateria_tests copy build build.xml dist doc ejecucion.sh jcc_files lib quitartildes.sh traductor directorio "traductor", que contenga el fuente "project.jj"
 bateria_tests bateria_tests copy build build.xml dist doc ejecucion.sh jcc_files lib quitartildes.sh traductor directorio "lib" con librer'ias requeridas
 bateria_tests bateria_tests copy build build.xml dist doc ejecucion.sh jcc_files lib quitartildes.sh traductor directorio "doc" con la documentaci'on del compilador
 Crear'a, en el directorio "dist", el programa "project.jar" que contendr'a
 la doc y el ejecutable
 
 bateria_tests bateria_tests copy build build.xml dist doc ejecucion.sh jcc_files lib quitartildes.sh traductor "ant clean" limpiar'a todo lo generado
 bateria_tests bateria_tests copy build build.xml dist doc ejecucion.sh jcc_files lib quitartildes.sh traductor "ant" compilarar'a lo necesario
 </description>
 
 <!-- El fuente de jcc ser'a ${project}.jj, y generar'a ${project}.tar -->
 <property name="project" value="clike_4"/>
 <property name="main_class" value="clike_4"/>
 <!--<property name="java_compiler" value="/usr/lib/jvm/java-8-openjdk-amd64/bin/javac"/> -->
 <property name="java_compiler" value="javac"/>
 
 <!-- Variables -->
 <property name="dir_traductor" value="traductor"/>
 <property name="doc" location="doc"/>
 <property name="build" location="build"/>
 <property name="build_META_INF" location="build/META-INF"/>
 <property name="dist" location="dist"/>
 <property name="lib" location="lib"/>
 <property name="jcc_src" location="traductor"/>
 <property name="jcc_files" location="jcc_files"/>
 
 <target name="init">
 <!-- Crear marca de tiempo -->
 <tstamp/>
 <!-- Crear la estructura de directorios -->
 <mkdir dir="${build}"/>
 <mkdir dir="${build_META_INF}"/>
 <mkdir dir="${jcc_files}"/>
 <mkdir dir="${dist}"/>
 <!-- Copiar direcctorios doc" a ${build}, si existe -->
 <copy todir="${dist}" failonerror="false"> 
 <fileset dir="." includes="doc/**" />
 </copy>
 </target>
 
 <target name="jcc" depends="init"> 
 <!-- Generar el c'odigo fuente del traductor desde ${src_compiler} hasta ${jcc_files} -->
 <javacc target="${jcc_src}/${project}.jj"
 javacchome="${user.home}/javacc-javacc-7.0.10/target"
 outputdirectory="${jcc_files}"
 static="true"
 />
 </target>
 
 <target name="compile" depends="init,jcc" description="compile the source">
 <!-- Compilar el c'odigo java desde ${lib} y ${jcc_files} en ${build} -->
 <javac executable="${java_compiler}" destdir="${build}" includeantruntime="false" target="1.8" source="1.8">
 <src path="${jcc_files}"/>
 <src path="${lib}"/>
 <compilerarg value="-Xlint:-unchecked"/>
 </javac>
 </target>
 
 <!-- Crear el jar con todo en ${dist} -->
 <target name="dist" depends="compile">
 <manifest file="${build_META_INF}/MANIFEST.MF" >
 <attribute name="Class-Path" value="${dir_traductor}/${project}.jar" />
 <attribute name="Main-Class" value="${dir_traductor}/${main_class}" /> 
 </manifest>
 <jar manifest="${build_META_INF}/MANIFEST.MF" jarfile="${dist}/${project}.jar" basedir="${build}" />
 </target>
 
 <!-- Limpiar todo -->
 <target name="clean" description="clean up">
 <delete dir="${build}"/>
 <delete dir="${dist}"/>
 <delete dir="${jcc_files}"/>
 </target>
 </project>
