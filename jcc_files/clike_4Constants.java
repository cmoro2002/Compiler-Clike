/* Generated By:JavaCC: Do not edit this line. clike_4Constants.java */
// TODO:
//	* Crear diferentes bloques e ir juntandolos a medida que subimos el arbol
// 	* Añadir a los attributes un campo que sea si es constante, para poder realizar operaciones con constantes
// 	* Arreglar paso de constantes por referencia
//	* Codigo: Variables globales
//  * 		  - hay un error al pasar por refernecia una variable no tendría que poner el DRF y lo pone
//  * 		  - profundidad en llamadas a funciones recursivas (tener un entero que diga en que profundidad estas e ir sumando / restando)


package traductor;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface clike_4Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 1;
  /** RegularExpression Id. */
  int DIGIT = 2;
  /** RegularExpression Id. */
  int tBOOL = 8;
  /** RegularExpression Id. */
  int tCHAR = 9;
  /** RegularExpression Id. */
  int tINT = 10;
  /** RegularExpression Id. */
  int tVOID = 11;
  /** RegularExpression Id. */
  int tMAIN = 12;
  /** RegularExpression Id. */
  int tBARRACOMENTARIO = 13;
  /** RegularExpression Id. */
  int tMAS = 14;
  /** RegularExpression Id. */
  int tMENOS = 15;
  /** RegularExpression Id. */
  int tMULTIPLICACION = 16;
  /** RegularExpression Id. */
  int tDIVISION = 17;
  /** RegularExpression Id. */
  int tCOMA = 18;
  /** RegularExpression Id. */
  int tPCOMA = 19;
  /** RegularExpression Id. */
  int tDOSPUNTOS = 20;
  /** RegularExpression Id. */
  int tNOT = 21;
  /** RegularExpression Id. */
  int tOR = 22;
  /** RegularExpression Id. */
  int tAND = 23;
  /** RegularExpression Id. */
  int tREF = 24;
  /** RegularExpression Id. */
  int tTRUE = 25;
  /** RegularExpression Id. */
  int tFALSE = 26;
  /** RegularExpression Id. */
  int tDOBLEIGUAL = 27;
  /** RegularExpression Id. */
  int tIGUAL = 28;
  /** RegularExpression Id. */
  int tLPARENTESIS = 29;
  /** RegularExpression Id. */
  int tRPARENTESIS = 30;
  /** RegularExpression Id. */
  int tIF = 31;
  /** RegularExpression Id. */
  int tELSE = 32;
  /** RegularExpression Id. */
  int tWHILE = 33;
  /** RegularExpression Id. */
  int tREAD = 34;
  /** RegularExpression Id. */
  int tREADLN = 35;
  /** RegularExpression Id. */
  int tPRINT = 36;
  /** RegularExpression Id. */
  int tPRINTLN = 37;
  /** RegularExpression Id. */
  int tINT2CHAR = 38;
  /** RegularExpression Id. */
  int tCHAR2INT = 39;
  /** RegularExpression Id. */
  int tCOMILLASIMPLE = 40;
  /** RegularExpression Id. */
  int tLLLAVE = 41;
  /** RegularExpression Id. */
  int tRLLAVE = 42;
  /** RegularExpression Id. */
  int tLCORCHETE = 43;
  /** RegularExpression Id. */
  int tRCORCHETE = 44;
  /** RegularExpression Id. */
  int tRETURN = 45;
  /** RegularExpression Id. */
  int tBARRABAJA = 46;
  /** RegularExpression Id. */
  int tMAYOR = 47;
  /** RegularExpression Id. */
  int tMENOR = 48;
  /** RegularExpression Id. */
  int tMAYORIGUAL = 49;
  /** RegularExpression Id. */
  int tMENORIGUAL = 50;
  /** RegularExpression Id. */
  int tDIFERENTE = 51;
  /** RegularExpression Id. */
  int tMODULO = 52;
  /** RegularExpression Id. */
  int tENTRECOMILLAS = 53;
  /** RegularExpression Id. */
  int tENTRECOMILLASSIMPLES = 54;
  /** RegularExpression Id. */
  int tID = 55;
  /** RegularExpression Id. */
  int tDIGITO = 56;
  /** RegularExpression Id. */
  int tCOMENTARIO = 57;
  /** RegularExpression Id. */
  int tBASURA = 58;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<LETTER>",
    "<DIGIT>",
    "\"\\t\"",
    "\"\\n\"",
    "\" \"",
    "\"\\r\"",
    "\".\"",
    "\"bool\"",
    "\"char\"",
    "\"int\"",
    "\"void\"",
    "\"main\"",
    "\"//\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"!\"",
    "\"||\"",
    "\"&&\"",
    "\"&\"",
    "\"true\"",
    "\"false\"",
    "\"==\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"read\"",
    "\"read_ln\"",
    "\"print\"",
    "\"print_ln\"",
    "\"int2char\"",
    "\"char2int\"",
    "\"\\\'\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"return\"",
    "\"_\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"%\"",
    "<tENTRECOMILLAS>",
    "<tENTRECOMILLASSIMPLES>",
    "<tID>",
    "<tDIGITO>",
    "<tCOMENTARIO>",
    "<tBASURA>",
  };

}
